services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - ./kafka-data:/bitnami/kafka

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data

  backend:
    build:
      context: ./BackEnd/N5.Permissions
      dockerfile: N5.Permissions.API/Dockerfile
    container_name: n5-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=N5PermissionsDb;User=sa;Password=P@ssw0rd;TrustServerCertificate=True;
      - ConnectionStrings__ReadOnlyConnection=Server=sqlserver;Database=N5PermissionsDb;User=sa;Password=P@ssw0rd;TrustServerCertificate=True;
      - KAFKA__BootstrapServers=kafka:9092
      - ELASTICSEARCH__Uri=http://elasticsearch:9200
    ports:
      - "5000:8080"
    depends_on:
      - sqlserver
      - kafka
      - elasticsearch

  frontend:
    build:
      context: ./FrontEnd/n5-permissions-frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
    container_name: n5-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  sqlserver-data:
  elastic-data: